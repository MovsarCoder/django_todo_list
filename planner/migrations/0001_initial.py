# Generated by Django 5.2.1 on 2025-05-08 13:03

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Имя категориии')),
            ],
        ),
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('high', 'Высокий'), ('middle', 'Средний'), ('low', 'Низкий')], max_length=50)),
                ('color', models.CharField(choices=[('red', 'Красный'), ('yellow', 'Желтый'), ('green', 'Зеленый')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Тег')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Имя задачи')),
                ('description', models.TextField(blank=True)),
                ('is_done', models.BooleanField(default=False)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('priority', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='planner.priority')),
                ('tags', models.ManyToManyField(blank=True, to='planner.tag')),
            ],
        ),
    ]
